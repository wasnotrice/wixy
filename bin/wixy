#!/usr/bin/env ruby
require 'optparse'
require 'ostruct'
require_relative '../lib/wixy'

options = OpenStruct.new
config = Wixy::Config.new

# Defaults
options.encrypt = true
options.decrypt = false
options.mode = :encrypt
config.cipher = :caesar
config.shift = 3

begin
parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{__FILE__} [options] TEXT"
  opts.on("-e", "--encrypt", "Encrypt text (default)") do |e|
    options.encrypt = e
  end

  ciphers = Wixy::Config::Ciphers.new.names
  cipher_names = ciphers
    .map {|c| "  - [#{c[0]}]#{c[1,c.length-1]}"}

  opts.on("-c", "--cipher CIPHER", ciphers.map(&:to_sym), "Use CIPHER", *cipher_names) do |c|
    config.cipher = c
  end

  opts.on("-d", "--decrypt", "Decrypt text") do |d|
    options.decrypt = d
  end

  opts.on("-k", "--key KEY", "Use KEY to create cipher") do |k|
    config.key = k
  end

  opts.on("-s", "--shift [INTEGER]", Integer, "Alphabet shift") do |s|
    config.shift = s
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end

  opts.on_tail("-v", "--version", "Show version") do
    puts Wixy::VERSION
    exit
  end
end.parse!
rescue => e
  abort e.message
end

text = ARGV.pop
abort(parser) unless text
options.mode = :decrypt if options.decrypt
result = Wixy.public_send(options.mode, text, config)
puts result
